# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Beta.ui'
# This file is automatically generated by PyQt5's UI code generator (pyuic5).

from PyQt5 import QtCore, QtGui, QtWidgets  # Import necessary PyQt5 modules

class Ui_MainWindow(object):
    # Method to set up the UI components in the main window
    def setupUi(self, MainWindow):
        # Set the name and dimensions of the main window
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)  # Set window size to 800x600 pixels

        # Create the central widget, which acts as the main container
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Add a label for the title
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(320, 20, 151, 41))  # Set its position and size
        font = QtGui.QFont()
        font.setFamily("Cooper Black")  # Set font family
        font.setPointSize(11)  # Set font size
        self.label.setFont(font)  # Apply the font to the label
        self.label.setObjectName("label")

        # Add a button for browsing images
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 90, 121, 51))  # Set its position and size
        self.pushButton.setObjectName("pushButton")

        # Add a button for generating the cartoonized image
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(340, 90, 121, 51))
        self.pushButton_2.setObjectName("pushButton_2")

        # Add a progress bar to show processing progress
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(350, 490, 118, 23))  # Set its position and size
        self.progressBar.setProperty("value", 0)  # Initialize progress bar value to 0
        self.progressBar.setObjectName("progressBar")

        # Add a horizontal layout to display images side-by-side
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(90, 190, 611, 261))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)  # Remove margins
        self.horizontalLayout.setObjectName("horizontalLayout")

        # Add a label to display the original image
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_3.setText("")  # Initialize with no text
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)  # Add to the horizontal layout

        # Add a spacer between the two image labels
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)

        # Add a label to display the cartoonized image
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_2.setText("")  # Initialize with no text
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)  # Add to the horizontal layout

        # Add a label for "Original" under the original image
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(140, 170, 47, 13))  # Set its position
        self.label_4.setObjectName("label_4")

        # Add a label for "Cartoonized" under the cartoonized image
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(530, 170, 71, 16))  # Set its position
        self.label_5.setObjectName("label_5")

        # Set the central widget to the main window
        MainWindow.setCentralWidget(self.centralwidget)

        # Add a menu bar (currently empty)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))  # Set its position and size
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        # Add a status bar (currently empty)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Call a method to set up text for all widgets
        self.retranslateUi(MainWindow)

        # Connect signals and slots (used for event handling)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # Method to set the text for all widgets
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))  # Set window title
        self.label.setText(_translate("MainWindow", "Image Cartoonizer"))  # Set title label text
        self.pushButton.setText(_translate("MainWindow", "Browse Image"))  # Set text for browse button
        self.pushButton_2.setText(_translate("MainWindow", "Generate"))  # Set text for generate button
        self.label_4.setText(_translate("MainWindow", "Original"))  # Set label for original image
        self.label_5.setText(_translate("MainWindow", "Cartoonized"))  # Set label for cartoonized image


# Main entry point of the application
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)  # Create the application object
    MainWindow = QtWidgets.QMainWindow()  # Create the main window
    ui = Ui_MainWindow()  # Create an instance of the UI class
    ui.setupUi(MainWindow)  # Set up the UI in the main window
    MainWindow.show()  # Show the main window
    sys.exit(app.exec_())  # Execute the application event loop
